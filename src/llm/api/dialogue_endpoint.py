from fastapi import APIRouter, Depends, HTTPException, Header, HTTPException
from lib.models.schemas import Params
from lib.llm.generator import Orchestrator
from db.database import Database
from db.users_db import Users
from src.db.api.db_endpoint import get_current_user_id
import json 
import time
router = APIRouter()

db = Database()
user_service = Users(db)

class DialogueController:
    def __init__(self):
        self.generator_class = Orchestrator

    def generate(self, params: Params):
        generator = self.generator_class(params.dict())
        return generator.create_dialog()

dialogue_controller = DialogueController()

@router.post("/generate", tags=["Dialogue"])
def generate(params: Params, user_id: int = Depends(get_current_user_id)):
    # a = dialogue_controller.generate(params)
    a = {
    "data": [
        {
            "id": 0,
            "info": "Стас показывает волшебный ластик и предлагает Ивану испытать его, стерев что-нибудь в классе.",
            "type": "C",
            "mood": "воодушевлённый",
            "goal_achieved": {
                "item": -1,
                "info": -1
            },
            "to": [
                {
                    "id": 1,
                    "mood": "воодушевлённый",
                    "line": "Вау, Стас, а этот ластик правда может стирать не только карандаш, но и чернила? Это же просто волшебство какое-то!",
                    "info": "интерес к ластику"
                },
                {
                    "id": 2,
                    "mood": "нейтральный",
                    "line": "Стас, ну ладно, если ты не хочешь рассказывать про ластик, может, тогда сам попробуешь разгадать тайну школы?",
                    "info": "предложение помочь"
                }
            ],
            "line": "Ого, это же тот самый ластик, про который все говорят! Я слышал, он может стирать не только карандашные линии, но и... ну, вообще почти всё! Вот бы попробовать стереть эту скучную задачку в учебнике... Но только аккуратно, говорят, он работает недолго. Может, сначала что-то маленькое испытаем? Например, этот пятнистый листок на парте — он мне уже давно мешает!"
        },
        {
            "id": 1,
            "info": "Стас объясняет, что ластик может стирать чернила и даже события, но предупреждает о риске исчезновения при злоупотреблении.",
            "type": "M",
            "mood": "воодушевлённый",
            "goal_achieved": {
                "item": -1,
                "info": -1
            },
            "to": [
                {
                    "id": 4,
                    "mood": "нейтральный",
                    "line": "Стас, а давай попробуем стереть что-то посерьёзнее, например, контрольную на столе или расписание на доске?",
                    "info": "предложение стереть что-то важное"
                }
            ],
            "line": "Да, это правда работает! Я сам видел, как он стирал чернила с контрольной — просто провёл, и всё исчезло, будто её и не было! Говорят, он может даже стирать события, но это уже опасно... Один парень из старших классов попробовал стереть двойку в журнале, и ластик после этого стал меньше. Если использовать его слишком часто, он просто испарится, как мел на доске. Так что давай сначала попробуем на чём-то неважном, например, на этом листке. А вдруг он и правда волшебный? Было бы круто!"
        },
        {
            "id": 2,
            "info": "Стас расстроен отказом, рассказывает, что нашел ластик и хотел разгадать тайну школы, но теперь попробует один.",
            "type": "M",
            "mood": "грустный",
            "goal_achieved": {
                "item": -1,
                "info": -1
            },
            "to": [
                {
                    "id": 7,
                    "mood": "нейтральный",
                    "line": "Ладно, Стас, может, я все-таки помогу тебе с этим ластиком. Интересно, что он еще может.",
                    "info": "предложение помощи"
                }
            ],
            "line": "Эх, ладно... Я правда хотел с кем-нибудь поделиться, но раз ты не хочешь слушать... Нашел я этот ластик вчера в старом шкафу в кабинете физики. Думал, может, он поможет разгадать, почему у нас в школе такие странные вещи происходят. Хотел проверить — вдруг он стирает не только карандаш, но и... ну, например, следы этих странностей? Но теперь попробую сам. Только вот страшновато — а вдруг он исчезнет после первого же раза? Тогда все мои планы... Ну да ладно, попробую хотя бы этот листок стереть."
        },
        {
            "id": 4,
            "info": "Стас спрашивает, что именно стереть: контрольную работу на столе или расписание на доске.",
            "type": "C",
            "mood": "воодушевлённый",
            "goal_achieved": {
                "item": -1,
                "info": -1
            },
            "to": [
                {
                    "id": 9,
                    "mood": "радостный",
                    "line": "Давай попробуем стереть контрольную, мне так хочется увидеть, как это работает!",
                    "info": "желание стереть контрольную"
                },
                {
                    "id": 10,
                    "mood": "нейтральный",
                    "line": "А что, если мы попробуем стереть расписание? Интересно, получится ли?",
                    "info": "интерес к стиранию расписания"
                }
            ],
            "line": "Ого, контрольную или расписание? Это уже серьёзно! Если стереть контрольную, то можно избежать плохой оценки, но вдруг учительница заметит и задаст ещё больше? А если стереть расписание... Может, убрать этот скучный урок химии? Но тогда все удивятся, почему его нет... Хотя, если подумать, расписание висит на доске, его все видят — вдруг кто-то заподозрит неладное? Ладно, давай рискнём, но только один раз! Выбирай: контрольная или химия? Главное — не переборщить, а то ластик исчезнет, и всё!"
        },
        {
            "id": 7,
            "info": "Стас спрашивает, не передумал ли Иван и не хочет ли все-таки помочь испытать ластик.",
            "type": "C",
            "mood": "грустный",
            "goal_achieved": {
                "item": -1,
                "info": -1
            },
            "to": [
                {
                    "id": 4,
                    "mood": "воодушевлённый",
                    "line": "Давай попробуем стереть что-то из этого: контрольную на столе или расписание на доске?",
                    "info": "предложение выбора"
                },
                {
                    "id": 8,
                    "mood": "нейтральный",
                    "line": "Ну ладно, Стас, если ты решил попробовать сам, удачи. Будь осторожен.",
                    "info": "пожелание удачи"
                }
            ],
            "line": "Ой, правда? Ты точно не шутишь? Я уже думал, что останусь с этим ластиком один на один... Может, тогда попробуем вместе? Только... только аккуратно, ладно? Вдруг он и правда исчезнет после первого раза, а у меня столько идей... Ну, например, можно проверить, стирает ли он эти странные надписи на доске, которые появляются сами по себе. Или... или следы от портфеля, который вчера сам взлетел! Как думаешь, с чего начнём?"
        },
        {
            "id": 9,
            "info": "Стас стирает контрольную, радуется, но замечает, что ластик уменьшился.",
            "type": "M",
            "mood": "растерянный",
            "goal_achieved": {
                "item": -1,
                "info": -1
            },
            "to": [
                {
                    "id": 11,
                    "mood": "нейтральный",
                    "line": "Стас, давай не будем больше рисковать, ластик и правда стал меньше.",
                    "info": "предложение остановиться"
                }
            ],
            "line": "Ого, смотри, контрольная исчезла — будто её и не было! Это просто невероятно! Но... ластик стал меньше, совсем чуть-чуть, но заметно. Если так пойдёт дальше, он совсем испарится... Может, хватит на сегодня? Хотя... эх, так хочется ещё что-нибудь стереть! Но вдруг это последний раз, когда он работает? Надо быть осторожнее... Ладно, давай пока уберём ластик, а то я уже сам запутался — то ли радоваться, то ли переживать."
        },
        {
            "id": 10,
            "info": "Стас пытается стереть расписание на доске, но оно появляется снова; ластик не подействовал.",
            "type": "M",
            "mood": "растерянный",
            "goal_achieved": {
                "item": -1,
                "info": -1
            },
            "to": [
                {
                    "id": 12,
                    "mood": "нейтральный",
                    "line": "Стас, а может, этот ластик вообще не волшебный, и мы просто зря время теряем?",
                    "info": "сомнение в волшебстве ластика"
                }
            ],
            "line": "Ой-ой... Такого я не ожидал! Я же чётко провёл ластиком по расписанию, оно исчезло, я даже обрадовался... Но через секунду оно снова появилось, будто его и не стирали! Это же вообще нелогично... Ластик-то волшебный, он должен работать! Может, здесь какая-то магия посильнее? Или... или расписание тоже волшебное? Ой, теперь я совсем запутался... Может, не надо было трогать? Но если ластик не сработал, значит, он ещё целый... Хотя стоп, он же стал чуть меньше! Что же делать-то теперь?"
        },
        {
            "id": 8,
            "info": "Стас вздыхает, говорит, что попробует сам, и прощается.",
            "type": "P",
            "mood": "грустный",
            "goal_achieved": {
                "item": -1,
                "info": "Стас расстроен, но попытается использовать ластик самостоятельно."
            },
            "to": [],
            "line": "Ну что ж... Ладно, попробую сам. Наверное, ты прав — вдруг этот ластик и правда опасный? Но я не могу просто так оставить всё... Может, хоть один раз рискну — проверю на этом листке. Если что, ты же рядом, да?.. Хотя нет, ты же не хочешь. Эх, ладно... Тогда... тогда я просто аккуратно. И если что-то пойдёт не так, я сразу остановлюсь. Спасибо, что хотя бы выслушал. До встречи... надеюсь, всё получится."
        },
        {
            "id": 11,
            "info": "Стас говорит, что ластик почти исчез, и они решают больше не рисковать.",
            "type": "P",
            "mood": "испуганный",
            "goal_achieved": {
                "item": -1,
                "info": "Волшебный ластик исчезает при частом использовании."
            },
            "to": [],
            "line": "Да, давай лучше остановимся... Ластик и правда почти испарился, а вдруг он нам ещё пригодится? Может, для чего-то важного... Например, если снова начнутся эти странные вещи в школе — летающие портфели или надписи на доске. Лучше сохранить его, пока не разберёмся, откуда он вообще взялся... Ой, только представь, если он исчезнет, а потом случится что-то, что можно было бы стереть! Давай спрячем его куда-нибудь, а? Чтобы никто не нашёл..."
        },
        {
            "id": 12,
            "info": "Стас разочарован, предполагает, что ластик работает только на бумаге, и прощается.",
            "type": "P",
            "mood": "грустный",
            "goal_achieved": {
                "item": -1,
                "info": "Ластик не действует на школьные доски."
            },
            "to": [],
            "line": "Эх... Похоже, ты прав. Наверное, этот ластик просто хорошо стирает бумагу, а всё остальное — просто выдумки. Жаль, я так надеялся, что он поможет разгадать тайны нашей школы... Ладно, не будем больше тратить время. Спасибо, что хотя бы попробовал со мной разобраться. Может, когда-нибудь мы всё же найдём что-то по-настоящему волшебное... А пока пойду, попробую стереть хотя бы эту задачку в учебнике — хоть какая-то польза. До встречи!"
        }
    ]
}
    time.sleep(30)
    # a = {"x": 1}
    # time.sleep(5)
    # try:
    #     a_dict = json.loads(a)
    # except Exception:
    #     raise HTTPException(status_code=500, detail="Failed to parse generated dialogue")

    user_data = user_service.get_user_data(user_id)
    if not user_data:
        raise HTTPException(status_code=404, detail="User data not found")

    if isinstance(user_data, str):
        user_data = json.loads(user_data)

    game_id = params.game_id
    scene_id = params.scene_id
    script_id = params.script_id
    if script_id is None:
        raise HTTPException(status_code=400, detail="script_id должен быть передан в params или я в чем-то ошибся, анлак")
    if game_id is None:
        raise HTTPException(status_code=400, detail="game_id должен быть передан в params или я в чем-то ошибся, анлак")
    if scene_id is None:
        raise HTTPException(status_code=400, detail="scene_id должен быть передан в params или я в чем-то ошибся, анлак")
    # Поиск по структуре
    # for game in user_data.get("games", []):
    #     if str(game.get("id")) == str(game_id):
    #         for scene in game.get("scenes", []):
    #             if str(scene.get("id")) == str(scene_id):
    #                 # if "scripts" not in scene:
    #                 #     scene["scripts"] = []

    #                 found = False
    #                 for script in scene.get("scripts", []):
    #                     if str(script.get("id")) == str(script_id):
    #                         script["result"] = a
    #                         found = True
    #                         break
    #                 if not found:
    #                     raise HTTPException(status_code=400, detail="script_id не валидный")
    #                 break
    #         break
    for game_index in range(len(user_data.get("games", []))):
        game = user_data["games"][game_index]
        if str(game.get("id")) == str(game_id):
            for scene_index in range(len(game.get("scenes", []))):
                scene = game["scenes"][scene_index]
                if str(scene.get("id")) == str(scene_id):
                    found = 0
                    for script_index in range(len(scene.get("scripts", []))):
                        script = scene["scripts"][script_index]
                        if str(script.get("id")) == str(script_id):
                            user_data["games"][game_index]["scenes"][scene_index]["scripts"][script_index]["result"] = a
                            found = 1
                            break
                    if not found:
                        raise HTTPException(status_code=400, detail="script_id не валидный")
                    break
            break
                        
    success = user_service.update_user_data(user_id, user_data)
    if not success:
        raise HTTPException(status_code=500, detail="Failed to update user data")
    
    return {"ok": True}
